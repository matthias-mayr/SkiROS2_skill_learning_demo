<?xml version="1.0"?>
<launch>
    <!-- Needs to be started paused so that the controller is started after the joint angles are set -->
    <arg name="paused" default="true"/> 
    <arg name="use_sim_time" default="true"/>
    <arg name="gazebo_gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="world_name" default="$(find iiwa_gazebo)/world/iiwa.world"/> 
    <arg name="gzclient" default="false"/>
    <arg name="rviz" default="true"/>
    <arg name="load_box" default="true"/> 

    <!-- Select the robot -->
    <arg name="robot_name" default="iiwa"/>
    <arg name="model" default="7" />

    <!-- Select the controller -->
    <arg name="controller" default="CartesianImpedance_trajectory_controller"/>

    <!-- Setup iiwa -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find skiros2_skill_learning_demo)/res/urdf/iiwa7_with_peg.urdf.xacro' hardware_interface:=EffortJointInterface robot_name:=$(arg robot_name)" />
    <!-- Spawn iiwa service -->
    <include file="$(find iiwa_tools)/launch/iiwa_service.launch"/>

    <!-- Spawn box in Gazebo -->
    <group if="$(arg load_box)">
        <param name="/box_with_hole" textfile="$(find skiros2_skill_learning_demo)/res/urdf/box_with_hole.urdf"/>
        <node name="box_urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
                    args="-urdf -model box_with_hole -param /box_with_hole"/>
    </group>

    <!-- Loads the Gazebo world -->
    <include unless="$(arg gzclient)"
        file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/> 
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gazebo_gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>
    <!-- Auto-unpause -->
    <node if="$(arg paused)" name="unpause_gazebo" pkg="skiros2_skill_learning_demo" type="unpause_gazebo.sh" />

    <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model iiwa -param robot_description -J iiwa_joint_1 0.0 -J iiwa_joint_2 0.25 -J iiwa_joint_3 0.0 -J iiwa_joint_4 -1.3 -J iiwa_joint_5 0.0 -J iiwa_joint_6 1.56 -J iiwa_joint_7 0.0"/>

    <!-- Spawn controller -->
    <rosparam file="$(find skiros2_skill_learning_demo)/config/control.yaml" command="load" ns="$(arg robot_name)"/> 
    <include file="$(find iiwa_control)/launch/iiwa_control.launch">
       <arg name="controller" value="$(arg controller)"/>
    </include>

    <!-- Start trajectory generator -->
    <group ns="$(arg robot_name)/cartesian_trajectory_generator">
        <node name= "cartesian_trajectory_generator" pkg= "cartesian_trajectory_generator" type="cartesian_trajectory_generator" output="screen">
        </node>
    </group>

    <!-- RViz -->
    <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(find skiros2_skill_learning_demo)/config/robot.rviz" required="true" output="screen"/>
</launch>
